[{"C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\index.tsx":"1","C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"3","C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx":"4","C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"7","C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"8"},{"size":565,"mtime":1608939851781,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":2366,"mtime":1609203041540,"results":"12","hashOfConfig":"10"},{"size":700,"mtime":1609199017888,"results":"13","hashOfConfig":"10"},{"size":1725,"mtime":1609203078623,"results":"14","hashOfConfig":"10"},{"size":1594,"mtime":1609202993841,"results":"15","hashOfConfig":"10"},{"size":1274,"mtime":1609203083045,"results":"16","hashOfConfig":"10"},{"size":2796,"mtime":1609202554405,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qwq8jo",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},"C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\index.tsx",[],"C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],["36","37"],"C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",["38"],"C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx",[],"C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",["39","40"],"C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",["41","42"],"C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",["43","44"],"import React, { FormEvent, useState } from \"react\";\r\nimport { Button, Form, FormInput, Segment } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport {v4 as uuid} from 'uuid';\r\n\r\ninterface IProps {\r\n  setEditMode: (editMode: boolean) => void;\r\n  activity: IActivity;\r\n  createActivity: (activity: IActivity) => void;\r\n  editActivity: (activity: IActivity) => void;\r\n}\r\n\r\nexport const ActivityForm: React.FC<IProps> = ({\r\n  setEditMode,\r\n  activity: initialFormState,\r\n  createActivity,\r\n  editActivity\r\n}) => {\r\n  const initializeForm = () => {\r\n    if (initialFormState) {\r\n      return initialFormState;\r\n    } else {\r\n      return {\r\n        id: \"\",\r\n        title: \"\",\r\n        category: \"\",\r\n        description: \"\",\r\n        date: \"\",\r\n        city: \"\",\r\n        venue: \"\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const [activity, setActivity] = useState<IActivity>(initializeForm);\r\n\r\n  const handleSubmit = () => {\r\n    if(activity.id.length === 0) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid()\r\n      }\r\n      createActivity(activity)\r\n    }\r\n    else {\r\n      editActivity(activity)\r\n    }\r\n    console.log(activity);\r\n  };\r\n\r\n  const handleInputChange = (\r\n    event: FormEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    const { name, value } = event.currentTarget;\r\n    setActivity({ ...activity, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"title\"\r\n          placeholder=\"title\"\r\n          value={activity.title}\r\n        />\r\n        <Form.TextArea\r\n          onChange={handleInputChange}\r\n          name=\"description\"\r\n          rows={2}\r\n          placeholder=\"description\"\r\n          value={activity.description}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"category\"\r\n          placeholder=\"category\"\r\n          value={activity.category}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"date\"\r\n          type=\"datetime-local\"\r\n          placeholder=\"date\"\r\n          value={activity.date}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"city\"\r\n          placeholder=\"city\"\r\n          value={activity.city}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"venue\"\r\n          placeholder=\"venue\"\r\n          value={activity.venue}\r\n        />\r\n        <Button floated=\"right\" positive type=\"submit\" content=\"Submit\" />\r\n        <Button\r\n          onClick={() => setEditMode(false)}\r\n          floated=\"right\"\r\n          type=\"button\"\r\n          content=\"Cancel\"\r\n        />\r\n      </Form>\r\n    </Segment>\r\n  );\r\n};\r\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":7,"column":10,"nodeType":"51","messageId":"52","endLine":7,"endColumn":25},{"ruleId":"53","severity":1,"message":"54","line":46,"column":35,"nodeType":"55","messageId":"56","endLine":46,"endColumn":37},{"ruleId":"53","severity":1,"message":"54","line":46,"column":58,"nodeType":"55","messageId":"56","endLine":46,"endColumn":60},{"ruleId":"49","severity":1,"message":"57","line":4,"column":3,"nodeType":"51","messageId":"52","endLine":4,"endColumn":8},{"ruleId":"49","severity":1,"message":"58","line":6,"column":3,"nodeType":"51","messageId":"52","endLine":6,"endColumn":12},{"ruleId":"49","severity":1,"message":"59","line":2,"column":24,"nodeType":"51","messageId":"52","endLine":2,"endColumn":33},{"ruleId":"49","severity":1,"message":"60","line":39,"column":11,"nodeType":"51","messageId":"52","endLine":39,"endColumn":22},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"@typescript-eslint/no-unused-vars","'ActivityDetails' is defined but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'Image' is defined but never used.","'ItemGroup' is defined but never used.","'FormInput' is defined but never used.","'newActivity' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]