[{"C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\index.tsx":"1","C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"3","C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx":"4","C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"7","C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"8","C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"9","C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"10"},{"size":565,"mtime":1608939851781,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":3093,"mtime":1609268273290,"results":"14","hashOfConfig":"12"},{"size":700,"mtime":1609199017888,"results":"15","hashOfConfig":"12"},{"size":1996,"mtime":1609268343880,"results":"16","hashOfConfig":"12"},{"size":1806,"mtime":1609268480826,"results":"17","hashOfConfig":"12"},{"size":1274,"mtime":1609203083045,"results":"18","hashOfConfig":"12"},{"size":2859,"mtime":1609267917740,"results":"19","hashOfConfig":"12"},{"size":1185,"mtime":1609267047573,"results":"20","hashOfConfig":"12"},{"size":326,"mtime":1609267627931,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1qwq8jo",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\index.tsx",[],["45","46"],"C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],"C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",[],"C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx",[],"C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",["47"],"import React, { FormEvent, useState } from \"react\";\r\nimport { Button, Form, FormInput, Segment } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport {v4 as uuid} from 'uuid';\r\n\r\ninterface IProps {\r\n  setEditMode: (editMode: boolean) => void;\r\n  activity: IActivity;\r\n  createActivity: (activity: IActivity) => void;\r\n  editActivity: (activity: IActivity) => void;\r\n  submitting: boolean;\r\n}\r\n\r\nexport const ActivityForm: React.FC<IProps> = ({\r\n  setEditMode,\r\n  activity: initialFormState,\r\n  createActivity,\r\n  editActivity,\r\n  submitting\r\n}) => {\r\n  const initializeForm = () => {\r\n    if (initialFormState) {\r\n      return initialFormState;\r\n    } else {\r\n      return {\r\n        id: \"\",\r\n        title: \"\",\r\n        category: \"\",\r\n        description: \"\",\r\n        date: \"\",\r\n        city: \"\",\r\n        venue: \"\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const [activity, setActivity] = useState<IActivity>(initializeForm);\r\n\r\n  const handleSubmit = () => {\r\n    if(activity.id.length === 0) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid()\r\n      }\r\n      createActivity(newActivity)\r\n    }\r\n    else {\r\n      editActivity(activity)\r\n    }\r\n    console.log(activity);\r\n  };\r\n\r\n  const handleInputChange = (\r\n    event: FormEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    const { name, value } = event.currentTarget;\r\n    setActivity({ ...activity, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"title\"\r\n          placeholder=\"title\"\r\n          value={activity.title}\r\n        />\r\n        <Form.TextArea\r\n          onChange={handleInputChange}\r\n          name=\"description\"\r\n          rows={2}\r\n          placeholder=\"description\"\r\n          value={activity.description}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"category\"\r\n          placeholder=\"category\"\r\n          value={activity.category}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"date\"\r\n          type=\"datetime-local\"\r\n          placeholder=\"date\"\r\n          value={activity.date}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"city\"\r\n          placeholder=\"city\"\r\n          value={activity.city}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"venue\"\r\n          placeholder=\"venue\"\r\n          value={activity.venue}\r\n        />\r\n        <Button loading={submitting} floated=\"right\" positive type=\"submit\" content=\"Submit\" />\r\n        <Button\r\n          onClick={() => setEditMode(false)}\r\n          floated=\"right\"\r\n          type=\"button\"\r\n          content=\"Cancel\"\r\n        />\r\n      </Form>\r\n    </Segment>\r\n  );\r\n};\r\n","C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\app\\api\\agent.ts",["48"],"import axios, { AxiosResponse } from 'axios'\r\nimport { IActivity } from '../models/activity';\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\nconst responseBody = (response:AxiosResponse) => response.data;\r\n\r\nconst sleep = (ms: number) => (response: AxiosResponse) => \r\n    new Promise<AxiosResponse>(resolve => setTimeout(() => resolve(response), ms));\r\n\r\nconst requests = {\r\n    get: (url: string) => axios.get(url).then(sleep(1000)).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(sleep(1000)).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(sleep(1000)).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(sleep(1000)).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n    list: (): Promise<IActivity[]>  => requests.get('/activities'),\r\n    details: (id: string) => requests.get(`/activities/${id}`),\r\n    create: (activity: IActivity) => requests.post('/activities', activity),\r\n    update: (activity: IActivity) => requests.put(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.delete(`/activities/${id}`)\r\n}\r\n\r\nexport default{\r\n    Activities\r\n}","C:\\Users\\lizag\\ReactDemo\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":2,"column":24,"nodeType":"55","messageId":"56","endLine":2,"endColumn":33},{"ruleId":"57","severity":1,"message":"58","line":26,"column":1,"nodeType":"59","endLine":28,"endColumn":2},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"@typescript-eslint/no-unused-vars","'FormInput' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]